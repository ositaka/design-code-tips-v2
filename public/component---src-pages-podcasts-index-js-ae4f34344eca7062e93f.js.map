{"version":3,"file":"component---src-pages-podcasts-index-js-ae4f34344eca7062e93f.js","mappings":"uJA0CA,IAtC+B,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UAC1BC,EAAa,CAAEC,aAAc,OAEnC,EAA6CF,EAArCG,IAAAA,OAAR,MAAc,GAAd,EAAkBC,EAA2BJ,EAA3BI,gBAAiBC,EAAUL,EAAVK,MAEnC,OAAMA,GAAWA,EAAMD,gBAEnB,gBAAC,EAAAE,EAAD,CACED,MAAOA,EAAMD,gBAAgBG,gBAC7BC,MAAOP,EACPE,IAAKA,IAGEC,EAET,gBAAC,EAAAE,EAAD,CACED,MAAOD,EAAgBG,gBACvBC,MAAOP,EACPE,IAAKA,IAIAE,EACF,uBAAKG,MAAO,CAAEP,WAAAA,GAAcQ,IAAKJ,EAAOF,IAAKA,IAE7C,O,gICvBLO,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAkEH,OAlEGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACOG,EAAUH,EAAKI,kBAAtBC,MACFC,EAAQN,EAAKO,KAAKC,aAAaF,MAErC,OACE,gCACE,gBAACG,EAAA,EAAD,CAAQH,MAAK,cAAgBA,IAC7B,2BAASI,UAAU,WACjB,uBAAKA,UAAU,2BACZP,GACCA,EAAMQ,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACR,gBAAC,EAAAC,KAAD,CACEC,GAAIH,EAAKI,OAAOC,KAChBC,IAAKN,EAAKO,GACVT,UAAU,kBAEV,2BACEA,UAAS,SACPE,EAAKQ,YAAYC,aAAe,cAAgB,KAGlD,uBAAKX,UAAU,cACZE,EAAKQ,YAAYE,cAChB,uBAAKZ,UAAU,sBACb,gBAACa,EAAA,EAAD,CACEnC,UAAW,CACTK,MAAOmB,EAAKQ,YAAYE,cACxB/B,IAAI,qCAAsCqB,EAAKQ,YAAYd,MAC3DkB,MACEZ,EAAKQ,YAAYE,cAAc9B,gBAC5BG,gBAAgB6B,MACrBC,OACEb,EAAKQ,YAAYE,cAAc9B,gBAC5BG,gBAAgB8B,WAIzB,MAEN,uBAAKf,UAAU,aACb,sBAAIA,UAAU,uBACXE,EAAKQ,YAAYd,OAEpB,uBAAKI,UAAU,gBACb,wBAAMA,UAAU,aACbE,EAAKQ,YAAYM,MAEnBd,EAAKQ,YAAYO,MAClBf,EAAKQ,YAAYO,KAAKC,OACpB,sBAAIlB,UAAU,aACXE,EAAKQ,YAAYO,KAAKhB,KAAI,SAACkB,GAAD,OACzB,sBAAIX,IAAKW,EAAG,OAAZ,IAAwBA,OAG1B,gBAUzB,EAlEG/B,CAA6BgC,EAAAA,WA6EpB,SAASC,IACtB,OACE,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAuCLlC,OAAQ,SAACC,EAAMkC,GAAP,OACN,gBAACpC,EAAD,CAAsBE,KAAMA,EAAMkC,MAAOA,O,ICzH5BC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAYlB,OAZkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBpC,OAAA,WACE,OACE,gBAACqC,EAAA,EAAD,KACE,uBAAK1B,UAAU,cACb,sBAAIA,UAAU,YAAd,oCAEF,uBAAKA,UAAU,aACb,gBAACqB,EAAD,SAIP,EAZkBI,CAAyBL,EAAAA","sources":["webpack://design-code-tips-v2/./src/components/PreviewCompatibleImage.js","webpack://design-code-tips-v2/./src/components/PodcastPosts.js","webpack://design-code-tips-v2/./src/pages/podcasts/index.js"],"sourcesContent":["import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nconst PreviewCompatibleImage = ({ imageInfo }) => {\n  const imageStyle = { borderRadius: '5px' }\n\n  const { alt = '', childImageSharp, image } = imageInfo\n\n  if (!!image && !!image.childImageSharp) {\n    return (\n      <GatsbyImage\n        image={image.childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    )\n  } else if (!!childImageSharp) {\n    return (\n      <GatsbyImage\n        image={childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    )\n    // for Netlify CMS\n  } else if (image) {\n    return <img style={{ imageStyle }} src={image} alt={alt} />\n  } else {\n    return null\n  }\n}\n\nPreviewCompatibleImage.propTypes = {\n  imageInfo: PropTypes.shape({\n    alt: PropTypes.string,\n    childImageSharp: PropTypes.object,\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    style: PropTypes.object,\n  }).isRequired,\n}\n\nexport default PreviewCompatibleImage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport PreviewCompatibleImage from './PreviewCompatibleImage'\n\nclass PodcastPostsTemplate extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n    const title = data.site.siteMetadata.title\n\n    return (\n      <>\n        <Helmet title={`Podcasts | ${title}`} />\n        <section className=\"section\">\n          <div className=\"cards-list four-columns\">\n            {posts &&\n              posts.map(({ node: post }) => (\n                <Link\n                  to={post.fields.slug}\n                  key={post.id}\n                  className=\"card has-image\"\n                >\n                  <article\n                    className={`post ${\n                      post.frontmatter.featuredpost ? 'is-featured' : ''\n                    }`}\n                  >\n                    <div className=\"post-image\">\n                      {post.frontmatter.featuredimage ? (\n                        <div className=\"featured-thumbnail\">\n                          <PreviewCompatibleImage\n                            imageInfo={{\n                              image: post.frontmatter.featuredimage,\n                              alt: `featured image thumbnail for post ${post.frontmatter.title}`,\n                              width:\n                                post.frontmatter.featuredimage.childImageSharp\n                                  .gatsbyImageData.width,\n                              height:\n                                post.frontmatter.featuredimage.childImageSharp\n                                  .gatsbyImageData.height,\n                            }}\n                          />\n                        </div>\n                      ) : null}\n                    </div>\n                    <div className=\"post-info\">\n                      <h3 className=\"post-title title-h3\">\n                        {post.frontmatter.title}\n                      </h3>\n                      <div className=\"post-details\">\n                        <span className=\"post-date\">\n                          {post.frontmatter.date}\n                        </span>\n                        {post.frontmatter.tags &&\n                        post.frontmatter.tags.length ? (\n                          <ul className=\"post-tags\">\n                            {post.frontmatter.tags.map((tag) => (\n                              <li key={tag + `tag`}>#{tag}</li>\n                            ))}\n                          </ul>\n                        ) : null}\n                      </div>\n                    </div>\n                  </article>\n                </Link>\n              ))}\n          </div>\n        </section>\n      </>\n    )\n  }\n}\n\nPodcastPosts.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default function PodcastPosts() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query PodcastPostsQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n          allMarkdownRemark(\n            sort: { order: ASC, fields: [frontmatter___date] }\n            filter: { frontmatter: { templateKey: { eq: \"podcast-post\" } } }\n          ) {\n            edges {\n              node {\n                excerpt(pruneLength: 400)\n                id\n                fields {\n                  slug\n                }\n                frontmatter {\n                  title\n                  templateKey\n                  date(formatString: \"MMMM DD, YYYY\")\n                  featuredpost\n                  featuredimage {\n                    childImageSharp {\n                      gatsbyImageData(\n                        width: 420\n                        quality: 100\n                        layout: CONSTRAINED\n                      )\n                    }\n                  }\n                  link\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data, count) => (\n        <PodcastPostsTemplate data={data} count={count} />\n      )}\n    />\n  )\n}\n","import * as React from 'react'\n\nimport Layout from '../../components/Layout'\nimport PodcastPosts from '../../components/PodcastPosts'\n\nexport default class PodcastIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div className=\"page-title\">\n          <h1 className=\"title-h1\">You are browsing all \"Podcasts\"</h1>\n        </div>\n        <div className=\"container\">\n          <PodcastPosts />\n        </div>\n      </Layout>\n    )\n  }\n}\n"],"names":["imageInfo","imageStyle","borderRadius","alt","childImageSharp","image","G","gatsbyImageData","style","src","PodcastPostsTemplate","render","data","this","props","posts","allMarkdownRemark","edges","title","site","siteMetadata","Helmet","className","map","post","node","Link","to","fields","slug","key","id","frontmatter","featuredpost","featuredimage","PreviewCompatibleImage","width","height","date","tags","length","tag","React","PodcastPosts","StaticQuery","query","count","PodcastIndexPage","Layout"],"sourceRoot":""}