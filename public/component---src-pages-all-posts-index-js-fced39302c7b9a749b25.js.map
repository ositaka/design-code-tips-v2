{"version":3,"file":"component---src-pages-all-posts-index-js-fced39302c7b9a749b25.js","mappings":"+NAKMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA2CH,OA3CGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACOG,EAAUH,EAAKI,kBAAtBC,MACFC,EAAQN,EAAKO,KAAKC,aAAaF,MAErC,OACE,gCACE,gBAACG,EAAA,EAAD,CAAQH,MAAK,eAAiBA,IAC9B,sBAAII,UAAU,QACXP,GACCA,EAAMQ,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACR,sBAAIC,IAAKF,EAAKG,GAAIL,UAAU,aAC1B,gBAAC,EAAAM,KAAD,CAAMC,GAAIL,EAAKM,OAAOC,MACpB,2BACET,UAAS,SAAUE,EAAKQ,YAAYC,aAAe,cAAgB,KAGnE,uBAAKX,UAAU,aACb,sBAAIA,UAAU,uBACXE,EAAKQ,YAAYd,OAEpB,uBAAKI,UAAU,gBACb,wBAAMA,UAAU,aACbE,EAAKQ,YAAYE,MAEnBV,EAAKQ,YAAYG,MAChBX,EAAKQ,YAAYG,KAAKC,OACtB,sBAAId,UAAU,aACXE,EAAKQ,YAAYG,KAAKZ,KAAI,SAACc,GAAD,OACzB,sBAAIX,IAAKW,EAAG,OAAZ,IAAwBA,OAG1B,gBAUzB,EA3CG3B,CAA6B4B,EAAAA,WAsDpB,SAASC,IACtB,OACE,gBAAC,EAAAC,YAAD,CACEC,MAAK,aA0CL9B,OAAQ,SAACC,EAAM8B,GAAP,OACN,gBAAChC,EAAD,CAAsBE,KAAMA,EAAM8B,MAAOA,O,ICpG5BC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAgBlB,OAhBkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBhC,OAAA,WACE,OACE,gBAACiC,EAAA,EAAD,KACE,uBAAKtB,UAAU,cACb,sBAAIA,UAAU,YAAd,yEAIF,uBAAKA,UAAU,aACb,2BAASA,UAAU,WACjB,gBAACiB,EAAD,UAKT,EAhBkBI,CAA0BL,EAAAA","sources":["webpack://design-code-tips-v2/./src/components/AllPostsList.js","webpack://design-code-tips-v2/./src/pages/all-posts/index.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport { Link, graphql, StaticQuery } from 'gatsby'\n\nclass AllPostsListTemplate extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n    const title = data.site.siteMetadata.title\n\n    return (\n      <>\n        <Helmet title={`All Posts | ${title}`} />\n        <ul className=\"list\">\n          {posts &&\n            posts.map(({ node: post }) => (\n              <li key={post.id} className=\"list-post\">\n                <Link to={post.fields.slug}>\n                  <article\n                    className={`post ${post.frontmatter.featuredpost ? 'is-featured' : ''\n                      }`}\n                  >\n                    <div className=\"post-info\">\n                      <h3 className=\"post-title title-h3\">\n                        {post.frontmatter.title}\n                      </h3>\n                      <div className=\"post-details\">\n                        <span className=\"post-date\">\n                          {post.frontmatter.date}\n                        </span>\n                        {post.frontmatter.tags &&\n                          post.frontmatter.tags.length ? (\n                          <ul className=\"post-tags\">\n                            {post.frontmatter.tags.map((tag) => (\n                              <li key={tag + `tag`}>#{tag}</li>\n                            ))}\n                          </ul>\n                        ) : null}\n                      </div>\n                    </div>\n                  </article>\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </>\n    )\n  }\n}\n\nAllPostsList.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default function AllPostsList() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query AllPostsListQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n          allMarkdownRemark(\n            sort: { order: DESC, fields: [frontmatter___date] }\n            filter: {\n              frontmatter: {\n                templateKey: {\n                  in: [\n                    \"code-post\"\n                    \"design-post\"\n                    \"inspiration-post\"\n                    \"podcast-post\"\n                    \"tools-post\"\n                  ]\n                }\n              }\n            }\n          ) {\n            edges {\n              node {\n                excerpt(pruneLength: 400)\n                id\n                fields {\n                  slug\n                }\n                frontmatter {\n                  title\n                  templateKey\n                  date(formatString: \"MMMM DD, YYYY\")\n                  featuredpost\n                  tags\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data, count) => (\n        <AllPostsListTemplate data={data} count={count} />\n      )}\n    />\n  )\n}\n","import * as React from 'react'\n\nimport Layout from '../../components/Layout'\nimport AllPostsList from '../../components/AllPostsList'\n\nexport default class AllPostsIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div className=\"page-title\">\n          <h1 className=\"title-h1\">\n            You are browsing \"All Posts\" on a list, without any particular order\n          </h1>\n        </div>\n        <div className=\"container\">\n          <section className=\"section\">\n            <AllPostsList />\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n"],"names":["AllPostsListTemplate","render","data","this","props","posts","allMarkdownRemark","edges","title","site","siteMetadata","Helmet","className","map","post","node","key","id","Link","to","fields","slug","frontmatter","featuredpost","date","tags","length","tag","React","AllPostsList","StaticQuery","query","count","AllPostsIndexPage","Layout"],"sourceRoot":""}